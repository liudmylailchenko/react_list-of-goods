{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","lengthOptions","Array","fill","map","v","i","App","state","listVisibility","goods","selectedValue","handleStart","setState","handleReverse","reverse","handleSortAlphabetically","sort","a","b","localeCompare","handleReset","handleSortByLength","length","handleChange","e","filter","val","target","value","this","className","type","onClick","hidden","good","key","onChange","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAgB,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KA0F/CC,E,4MAvFbC,MAAQ,CACNC,gBAAgB,EAChBC,MAAM,GAAD,OAAMV,GACXW,cAAe,G,EAGjBC,YAAc,WACZ,EAAKC,SAAS,CACZJ,gBAAgB,K,EAIpBK,cAAgB,WACd,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOK,e,EAI5BC,yBAA2B,WACzB,EAAKH,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,YAAc,WACZ,EAAKR,SAAS,CACZH,MAAOV,EACPW,cAAe,K,EAInBW,mBAAqB,WACnB,EAAKT,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAIxDC,aAAe,SAACC,GACd,EAAKZ,SAAS,CACZH,MAAO,UAAIV,GAAiB0B,QAAO,SAAAC,GAAG,OAAIA,EAAIJ,QAAUE,EAAEG,OAAOC,SACjElB,cAAec,EAAEG,OAAOC,S,uDAIlB,IAAD,EAC0CC,KAAKtB,MAA9CE,EADD,EACCA,MAAOD,EADR,EACQA,eAAgBE,EADxB,EACwBA,cAE/B,OACE,yBAAKoB,UAAU,OACb,qCACA,2BAAI/B,EAAgBuB,QACpB,4BACES,KAAK,SACLC,QAASH,KAAKlB,YACdsB,QAASzB,GAHX,SAOA,yBAAKyB,OAAQzB,GACX,4BACGC,EAAMN,KAAI,SAAA+B,GAAI,OACb,wBAAIC,IAAKD,GAAOA,OAGpB,4BAAQH,KAAK,SAASC,QAASH,KAAKhB,eAApC,WAGA,4BAAQkB,KAAK,SAASC,QAASH,KAAKd,0BAApC,uBAGA,4BAAQgB,KAAK,SAASC,QAASH,KAAKT,aAApC,SAGA,4BAAQW,KAAK,SAASC,QAASH,KAAKR,oBAApC,kBAGA,4BAAQO,MAAOlB,EAAe0B,SAAUP,KAAKN,cAC1CvB,EAAcG,KAAI,SAAAkC,GAAI,OACrB,4BAAQF,IAAKE,GAAOA,a,GA/EhBC,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2c8ca83b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst lengthOptions = new Array(10).fill(0).map((v, i) => i + 1);\n\nclass App extends React.Component {\n  state = {\n    listVisibility: true,\n    goods: [...goodsFromServer],\n    selectedValue: 1,\n  };\n\n  handleStart = () => {\n    this.setState({\n      listVisibility: false,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      goods: goodsFromServer,\n      selectedValue: 1,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      goods: [...goodsFromServer].filter(val => val.length >= e.target.value),\n      selectedValue: e.target.value,\n    });\n  };\n\n  render() {\n    const { goods, listVisibility, selectedValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <p>{goodsFromServer.length}</p>\n        <button\n          type=\"button\"\n          onClick={this.handleStart}\n          hidden={!listVisibility}\n        >\n          Start\n        </button>\n        <div hidden={listVisibility}>\n          <ul>\n            {goods.map(good => (\n              <li key={good}>{good}</li>\n            ))}\n          </ul>\n          <button type=\"button\" onClick={this.handleReverse}>\n            Reverse\n          </button>\n          <button type=\"button\" onClick={this.handleSortAlphabetically}>\n            Sort alphabetically\n          </button>\n          <button type=\"button\" onClick={this.handleReset}>\n            Reset\n          </button>\n          <button type=\"button\" onClick={this.handleSortByLength}>\n            Sort by length\n          </button>\n          <select value={selectedValue} onChange={this.handleChange}>\n            {lengthOptions.map(item => (\n              <option key={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}